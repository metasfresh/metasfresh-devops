name: pipeline
on: [push]
jobs:

  init:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: do-it
        run: |
          echo 'initializing...'

  java:
    needs: [init]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: do-it
        run: |
          echo 'compiling...'

  backend:
    needs: [init, java]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: do-it
        run: |
          echo 'building...'

  test-java:
    name: test (java)
    runs-on: ubuntu-latest
    needs: [init, java]
    steps:
      - uses: actions/checkout@v3
      - uses: testspace-com/setup-testspace@v1
        with:
          domain: metasfresh
      - name: run-tests
        run: |
          docker buildx build -t tests .
      - name: publish results
        run: |
          docker run --rm -v "$(pwd)/junit:/reports" tests          
          find junit -type d -links 2 -exec testspace [{}]{}/*.xml \;
          testspace "[junit/foo]junit/foo/junit.log{$(cat junit/foo/junit.exit-code):foo junit tests}"
          testspace "[junit/bar]junit/bar/junit.log{$(cat junit/bar/junit.exit-code):bar junit tests}"
          testspace "[junit/baz]junit/baz/junit.log{$(cat junit/baz/junit.exit-code):baz junit tests}"
      - name: assert success
        run: |
          if [ $(cat junit/foo/junit.exit-code) != 0 ]; then cat junit/foo/junit.log && exit 1; fi
          if [ $(cat junit/bar/junit.exit-code) != 0 ]; then cat junit/bar/junit.log && exit 1; fi
          if [ $(cat junit/baz/junit.exit-code) != 0 ]; then cat junit/baz/junit.log && exit 1; fi
      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: junit-logs
          path: junit/**/junit.log


  frontend:
    runs-on: ubuntu-latest
    needs: [init]
    steps:
      - uses: actions/checkout@v3
      - name: do-it
        run: |
          echo 'building...'

  test-frontend:
    name: test (frontend)
    runs-on: ubuntu-latest
    needs: [init, frontend]
    steps:
      - uses: actions/checkout@v3
      - name: do-it
        run: |
          echo 'testing...'

  test-integration:
    name: test (integration)
    runs-on: ubuntu-latest
    needs: [init, backend, frontend]
    continue-on-error: true
    steps:
      - uses: actions/checkout@v3
      - name: do-it
        run: |
          echo 'integration testing...'

  redeploy:
    runs-on: ubuntu-latest
    needs: [init, backend, frontend]
    steps:
      - name: do-it
        run: |
          echo 'dispatching deployment...'